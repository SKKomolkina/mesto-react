{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PopupWithForm(props){var title=props.title,name=props.name,buttonText=props.buttonText,children=props.children,isOpen=props.isOpen,onClose=props.onClose;return/*#__PURE__*/_jsxs(\"div\",{className:\"popup popup-\".concat(name,\" \").concat(isOpen&&'popup_opened'),children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-close popup__cross popup__cross_btn_close-\".concat(name),type:\"button\",onClick:onClose}),/*#__PURE__*/_jsxs(\"form\",{id:\"popup__form\",className:\"popup__form popup__form_\".concat(name),method:\"get\",name:\"\".concat(name,\"-form\"),noValidate:true,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"popup__title\",children:title}),children,/*#__PURE__*/_jsx(\"button\",{className:\"popup__button popup__save\",type:\"submit\",children:buttonText})]})]});}export default PopupWithForm;","map":{"version":3,"sources":["/Users/meowmeow/development/mesto-react/src/components/PopupWithForm.js"],"names":["React","PopupWithForm","props","title","name","buttonText","children","isOpen","onClose"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAQC,CAAAA,KAAR,CAA+DD,KAA/D,CAAQC,KAAR,CAAeC,IAAf,CAA+DF,KAA/D,CAAeE,IAAf,CAAqBC,UAArB,CAA+DH,KAA/D,CAAqBG,UAArB,CAAiCC,QAAjC,CAA+DJ,KAA/D,CAAiCI,QAAjC,CAA2CC,MAA3C,CAA+DL,KAA/D,CAA2CK,MAA3C,CAAmDC,OAAnD,CAA+DN,KAA/D,CAAmDM,OAAnD,CAEA,mBACI,aAAK,SAAS,uBAAiBJ,IAAjB,aAAyBG,MAAM,EAAI,cAAnC,CAAd,wBAEI,eAAQ,SAAS,4DAAsDH,IAAtD,CAAjB,CACI,IAAI,CAAC,QADT,CACkB,OAAO,CAAEI,OAD3B,EAFJ,cAII,cAAM,EAAE,CAAC,aAAT,CAAuB,SAAS,mCAA6BJ,IAA7B,CAAhC,CAAqE,MAAM,CAAC,KAA5E,CAAkF,IAAI,WAAKA,IAAL,SAAtF,CAAwG,UAAU,KAAlH,wBAEI,WAAI,SAAS,CAAC,cAAd,UAA8BD,KAA9B,EAFJ,CAIKG,QAJL,cAMI,eAAQ,SAAS,CAAC,2BAAlB,CAA8C,IAAI,CAAC,QAAnD,UAA6DD,UAA7D,EANJ,GAJJ,GADJ,CAiBH,CAED,cAAeJ,CAAAA,aAAf","sourcesContent":["import React from 'react';\n\nfunction PopupWithForm(props) {\n    const { title, name, buttonText, children, isOpen, onClose } = props;\n\n    return (\n        <div className={`popup popup-${name} ${isOpen && 'popup_opened'}`}>\n\n            <button className={`button-close popup__cross popup__cross_btn_close-${name}`}\n                type=\"button\" onClick={onClose}></button>\n            <form id=\"popup__form\" className={`popup__form popup__form_${name}`} method=\"get\" name={`${name}-form`} noValidate>\n\n                <h2 className=\"popup__title\">{title}</h2>\n\n                {children}\n\n                <button className=\"popup__button popup__save\" type=\"submit\">{buttonText}</button>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default PopupWithForm"]},"metadata":{},"sourceType":"module"}